{
  "openapi": "3.1.0",
  "info": {
    "title": "Terra-Boot API",
    "description": "RESTful Services to interact with terraform CLI",
    "version": "1.0.22-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:9090",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "OAuth2Flow": [
        "openid"
      ]
    }
  ],
  "tags": [
    {
      "name": "RetrieveTerraformResult",
      "description": "APIs to manually fetching task results from terra-boot."
    },
    {
      "name": "TerraformFromScripts",
      "description": "APIs for running Terraform commands on the scripts sent via request body."
    },
    {
      "name": "Admin",
      "description": "Admin services for managing the application."
    },
    {
      "name": "TerraformFromDirectory",
      "description": "APIs for running Terraform commands inside a provided directory."
    },
    {
      "name": "TerraformFromGitRepo",
      "description": "APIs for running Terraform commands using Terraform scripts from a GIT Repo."
    }
  ],
  "paths": {
    "/terra-boot/task/results/batch": {
      "post": {
        "tags": [
          "RetrieveTerraformResult"
        ],
        "description": "Method to batch retrieve stored terraform result from terra-boot.",
        "operationId": "getBatchTaskResults",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "List of request IDs",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReFetchResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/validate": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "validateWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/plan": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Get Terraform Plan as JSON string from the list of script files provided",
        "operationId": "planWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/modify": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Modify resources via Terraform",
        "operationId": "modifyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/modify/async": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "async modify resources via Terraform",
        "operationId": "asyncModifyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/destroy": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Destroy resources via Terraform",
        "operationId": "destroyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/deploy": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deployWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/deploy/async": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncDeployWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/validate": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "validateScriptsFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/plan": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Get Terraform Plan as JSON string from the list of script files provided",
        "operationId": "planFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/modify": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Modify resources via Terraform",
        "operationId": "modifyFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/modify/async": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncModifyFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/destroy": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Destroy resources via Terraform",
        "operationId": "destroyFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/deploy": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deployFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/deploy/async": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncDeployFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/validate": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Validate the Terraform modules in the given directory.",
        "operationId": "validateFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/plan": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Get Terraform Plan as JSON string from the given directory.",
        "operationId": "plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/modify": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Modify resources via Terraform from the given directory.",
        "operationId": "modifyFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/modify/async": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async modify resources via Terraform from the given directory.",
        "operationId": "asyncModifyFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/deploy": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Deploy resources via Terraform from the given directory.",
        "operationId": "deployFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/deploy/async": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async deploy resources via Terraform from the given directory.",
        "operationId": "asyncDeployFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/task/result/{requestId}": {
      "get": {
        "tags": [
          "RetrieveTerraformResult"
        ],
        "description": "Method to retrieve stored terraform result in case terra-boot receives a failure while sending the terraform result via callback.",
        "operationId": "getStoredTaskResultByRequestId",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "id of the request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReFetchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Check health of Terra Boot API service",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraBootSystemStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/scripts/destroy/async": {
      "delete": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Async destroy the Terraform modules",
        "operationId": "asyncDestroyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScripts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/git/destroy/async": {
      "delete": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Async destroy the Terraform modules",
        "operationId": "asyncDestroyFromGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsGitRepo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/destroy": {
      "delete": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Destroy the resources from the given directory.",
        "operationId": "destroyFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/terra-boot/directory/destroy/async": {
      "delete": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async destroy resources via Terraform from the given directory.",
        "operationId": "asyncDestroyFromDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncRequestWithScriptsDirectory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response": {
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "description": "The result code of response.",
            "enum": [
              "Parameters Invalid",
              "Unprocessable Entity",
              "Terraform Execution Failed",
              "Unsupported Enum Value",
              "Service Unavailable",
              "Unauthorized",
              "Invalid Terraform Request",
              "Invalid Git Repo Details",
              "Invalid Terraform Tool",
              "Invalid Terraform Scripts",
              "Send Amqp Message Failed",
              "Result Already Returned or RequestId Invalid"
            ]
          },
          "details": {
            "type": "array",
            "description": "Details of the errors occurred",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Describes if the request is successful"
          }
        },
        "required": [
          "details",
          "resultType",
          "success"
        ]
      },
      "ReFetchResult": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request order."
          },
          "state": {
            "type": "string",
            "description": "State of the re-fetching result of order.",
            "enum": [
              "OK",
              "OrderInProgress",
              "ResultNotFound",
              "ResultParseFailed"
            ]
          },
          "terraformResult": {
            "$ref": "#/components/schemas/TerraformResult",
            "description": "Result of the service order executed by terraform."
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message of the re-fetching result of order."
          }
        },
        "required": [
          "requestId",
          "state"
        ]
      },
      "TerraformResult": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request"
          },
          "commandStdOutput": {
            "type": "string",
            "description": "stdout of the command returned as string."
          },
          "commandStdError": {
            "type": "string",
            "description": "stderr of the command returned as string."
          },
          "terraformState": {
            "type": "string",
            "description": ".tfstate file contents returned as string."
          },
          "generatedFileContentMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Data of all other files generated by the terraform execution.The map key contains the file name and value is the file contents as string."
          },
          "terraformVersionUsed": {
            "type": "string",
            "description": "The version of the Terraform binary used to execute scripts."
          },
          "commandSuccessful": {
            "type": "boolean"
          }
        },
        "required": [
          "requestId"
        ]
      },
      "TerraformRequestWithScripts": {
        "type": "object",
        "description": "Terraform request with scripts files",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "scriptFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map stores file name and content of all script files for deploy request."
          }
        },
        "required": [
          "isPlanOnly",
          "requestId",
          "requestType",
          "scriptFiles",
          "terraformVersion",
          "variables"
        ]
      },
      "TerraformValidateDiagnostics": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Detail of validation error."
          }
        }
      },
      "TerraformValidationResult": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "The request ID of the Terraform scripts validation."
          },
          "valid": {
            "type": "boolean",
            "description": "Defines if the Terraform scripts is valid."
          },
          "terraformVersionUsed": {
            "type": "string",
            "description": "The version of the Terraform binary used to execute scripts."
          },
          "diagnostics": {
            "type": "array",
            "description": "List of validation errors.",
            "items": {
              "$ref": "#/components/schemas/TerraformValidateDiagnostics"
            }
          }
        },
        "required": [
          "requestId",
          "valid"
        ]
      },
      "TerraformPlan": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "The id of the Terraform plan request"
          },
          "plan": {
            "type": "string",
            "description": "Terraform plan as a JSON string"
          },
          "terraformVersionUsed": {
            "type": "string",
            "description": "The version of the Terraform binary used to execute scripts."
          },
          "errorMessage": {
            "type": "string",
            "description": "The error message of executing terraform plan command."
          }
        },
        "required": [
          "plan",
          "requestId"
        ]
      },
      "TerraformAsyncRequestWithScripts": {
        "type": "object",
        "description": "Terraform async request with scripts files",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "scriptFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map stores file name and content of all script files for deploy request."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig",
            "description": "Configuration information of webhook."
          }
        },
        "required": [
          "isPlanOnly",
          "requestId",
          "requestType",
          "scriptFiles",
          "terraformVersion",
          "variables",
          "webhookConfig"
        ]
      },
      "WebhookConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Callback address after deployment/destroy is completed."
          },
          "authType": {
            "type": "string",
            "description": "The permission type when calling back.",
            "enum": [
              "none",
              "oauth",
              "hmac"
            ]
          }
        },
        "required": [
          "authType",
          "url"
        ]
      },
      "TerraformRequestWithScriptsGitRepo": {
        "type": "object",
        "description": "Terraform async request with scripts git repo",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptsGitRepoDetails",
            "description": "GIT Repo details from where the scripts can be fetched."
          }
        },
        "required": [
          "gitRepoDetails",
          "isPlanOnly",
          "requestId",
          "requestType",
          "terraformVersion",
          "variables"
        ]
      },
      "TerraformScriptsGitRepoDetails": {
        "type": "object",
        "properties": {
          "repoUrl": {
            "type": "string",
            "description": "url of the GIT repo. This repo will be cloned."
          },
          "branch": {
            "type": "string",
            "description": "Branch to be checked-out after the repo is cloned."
          },
          "scriptPath": {
            "type": "string",
            "description": "Location of the scripts. If not provided, the scripts will be executed from root folder of the repo."
          }
        },
        "required": [
          "branch",
          "repoUrl"
        ]
      },
      "TerraformAsyncRequestWithScriptsGitRepo": {
        "type": "object",
        "description": "Terraform request with scripts git repo",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptsGitRepoDetails",
            "description": "GIT Repo details from where the scripts can be fetched."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig",
            "description": "Configuration information of webhook."
          }
        },
        "required": [
          "gitRepoDetails",
          "isPlanOnly",
          "requestId",
          "requestType",
          "terraformVersion",
          "variables",
          "webhookConfig"
        ]
      },
      "TerraformRequestWithScriptsDirectory": {
        "type": "object",
        "description": "Terraform request with directory where scripts files exist",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "scriptsDirectory": {
            "type": "string",
            "description": "Directory where the Terraform scripts files exist."
          }
        },
        "required": [
          "isPlanOnly",
          "requestId",
          "requestType",
          "scriptsDirectory",
          "terraformVersion",
          "variables"
        ]
      },
      "TerraformAsyncRequestWithScriptsDirectory": {
        "type": "object",
        "description": "Terraform async request with directory where scripts files exist",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the request."
          },
          "requestType": {
            "type": "string",
            "description": "Type of the terraform request.",
            "enum": [
              "validate",
              "plan",
              "deploy",
              "modify",
              "destroy"
            ]
          },
          "terraformVersion": {
            "type": "string",
            "description": "The required version of terraform which will execute the scripts.",
            "pattern": "^(=|>=|<=)\\s*[vV]?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          },
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "tfState": {
            "type": "string",
            "description": "Terraform state as a string."
          },
          "scriptsDirectory": {
            "type": "string",
            "description": "Directory where the Terraform scripts files exist."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig",
            "description": "Configuration information of webhook."
          }
        },
        "required": [
          "isPlanOnly",
          "requestId",
          "requestType",
          "scriptsDirectory",
          "terraformVersion",
          "variables",
          "webhookConfig"
        ]
      },
      "TerraBootSystemStatus": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request."
          },
          "healthStatus": {
            "type": "string",
            "description": "The health status of terra-boot service.",
            "enum": [
              "OK",
              "NOK"
            ]
          },
          "serviceType": {
            "type": "string",
            "description": "The service type of terra-boot."
          },
          "serviceUrl": {
            "type": "string",
            "description": "The url of terra-boot service."
          },
          "errorMessage": {
            "type": "string",
            "description": "The error message of terra-boot service."
          }
        },
        "required": [
          "healthStatus",
          "requestId",
          "serviceType",
          "serviceUrl"
        ]
      }
    },
    "securitySchemes": {
      "OAuth2Flow": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:8088/oauth/v2/authorize",
            "tokenUrl": "http://localhost:8088/oauth/v2/token",
            "scopes": {
              "openid": "mandatory must be selected."
            }
          }
        }
      }
    }
  }
}