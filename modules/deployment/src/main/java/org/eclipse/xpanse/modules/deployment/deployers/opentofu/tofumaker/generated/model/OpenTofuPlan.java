/*
 * Tofu-Maker API
 * RESTful Services to interact with Tofu-Maker runtime
 *
 * The version of the OpenAPI document: 1.0.11-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.eclipse.xpanse.modules.deployment.deployers.opentofu.tofumaker.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** OpenTofuPlan */
@JsonPropertyOrder({
    OpenTofuPlan.JSON_PROPERTY_PLAN,
    OpenTofuPlan.JSON_PROPERTY_OPEN_TOFU_VERSION_USED
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.10.0")
public class OpenTofuPlan {
    public static final String JSON_PROPERTY_PLAN = "plan";
    @jakarta.annotation.Nonnull private String plan;

    public static final String JSON_PROPERTY_OPEN_TOFU_VERSION_USED = "openTofuVersionUsed";
    @jakarta.annotation.Nullable private String openTofuVersionUsed;

    public OpenTofuPlan() {}

    public OpenTofuPlan plan(@jakarta.annotation.Nonnull String plan) {

        this.plan = plan;
        return this;
    }

    /**
     * OpenTofu plan as a JSON string
     *
     * @return plan
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PLAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPlan() {
        return plan;
    }

    @JsonProperty(JSON_PROPERTY_PLAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPlan(@jakarta.annotation.Nonnull String plan) {
        this.plan = plan;
    }

    public OpenTofuPlan openTofuVersionUsed(
            @jakarta.annotation.Nullable String openTofuVersionUsed) {

        this.openTofuVersionUsed = openTofuVersionUsed;
        return this;
    }

    /**
     * The version of the OpenTofu binary used to execute scripts.
     *
     * @return openTofuVersionUsed
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OPEN_TOFU_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOpenTofuVersionUsed() {
        return openTofuVersionUsed;
    }

    @JsonProperty(JSON_PROPERTY_OPEN_TOFU_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOpenTofuVersionUsed(@jakarta.annotation.Nullable String openTofuVersionUsed) {
        this.openTofuVersionUsed = openTofuVersionUsed;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenTofuPlan openTofuPlan = (OpenTofuPlan) o;
        return Objects.equals(this.plan, openTofuPlan.plan)
                && Objects.equals(this.openTofuVersionUsed, openTofuPlan.openTofuVersionUsed);
    }

    @Override
    public int hashCode() {
        return Objects.hash(plan, openTofuVersionUsed);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenTofuPlan {\n");
        sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
        sb.append("    openTofuVersionUsed: ")
                .append(toIndentedString(openTofuVersionUsed))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
