/*
 * Tofu-Maker API
 * RESTful Services to interact with Tofu-Maker runtime
 *
 * The version of the OpenAPI document: 1.0.9-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.xpanse.modules.deployment.deployers.opentofu.tofumaker.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * OpenTofuValidationResult
 */
@JsonPropertyOrder({
        OpenTofuValidationResult.JSON_PROPERTY_VALID,
        OpenTofuValidationResult.JSON_PROPERTY_OPEN_TOFU_VERSION_USED,
        OpenTofuValidationResult.JSON_PROPERTY_DIAGNOSTICS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class OpenTofuValidationResult {
    public static final String JSON_PROPERTY_VALID = "valid";
    public static final String JSON_PROPERTY_OPEN_TOFU_VERSION_USED = "openTofuVersionUsed";
    public static final String JSON_PROPERTY_DIAGNOSTICS = "diagnostics";
    private Boolean valid;
    private String openTofuVersionUsed;
    private List<OpenTofuValidateDiagnostics> diagnostics = new ArrayList<>();

    public OpenTofuValidationResult() {
    }

    public OpenTofuValidationResult valid(Boolean valid) {

        this.valid = valid;
        return this;
    }

    /**
     * Defines if the scripts is valid.
     *
     * @return valid
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Boolean getValid() {
        return valid;
    }


    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    public OpenTofuValidationResult openTofuVersionUsed(String openTofuVersionUsed) {

        this.openTofuVersionUsed = openTofuVersionUsed;
        return this;
    }

    /**
     * The version of the OpenTofu binary used to execute scripts.
     *
     * @return openTofuVersionUsed
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OPEN_TOFU_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOpenTofuVersionUsed() {
        return openTofuVersionUsed;
    }


    @JsonProperty(JSON_PROPERTY_OPEN_TOFU_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOpenTofuVersionUsed(String openTofuVersionUsed) {
        this.openTofuVersionUsed = openTofuVersionUsed;
    }

    public OpenTofuValidationResult diagnostics(List<OpenTofuValidateDiagnostics> diagnostics) {

        this.diagnostics = diagnostics;
        return this;
    }

    public OpenTofuValidationResult addDiagnosticsItem(
            OpenTofuValidateDiagnostics diagnosticsItem) {
        if (this.diagnostics == null) {
            this.diagnostics = new ArrayList<>();
        }
        this.diagnostics.add(diagnosticsItem);
        return this;
    }

    /**
     * List of validation errors.
     *
     * @return diagnostics
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DIAGNOSTICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<OpenTofuValidateDiagnostics> getDiagnostics() {
        return diagnostics;
    }


    @JsonProperty(JSON_PROPERTY_DIAGNOSTICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiagnostics(List<OpenTofuValidateDiagnostics> diagnostics) {
        this.diagnostics = diagnostics;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenTofuValidationResult openTofuValidationResult = (OpenTofuValidationResult) o;
        return Objects.equals(this.valid, openTofuValidationResult.valid) &&
                Objects.equals(this.openTofuVersionUsed,
                        openTofuValidationResult.openTofuVersionUsed) &&
                Objects.equals(this.diagnostics, openTofuValidationResult.diagnostics);
    }

    @Override
    public int hashCode() {
        return Objects.hash(valid, openTofuVersionUsed, diagnostics);
    }

    @Override
    public String toString() {
        String sb = "class OpenTofuValidationResult {\n"
                + "    valid: " + toIndentedString(valid) + "\n"
                + "    openTofuVersionUsed: " + toIndentedString(openTofuVersionUsed)
                + "\n"
                + "    diagnostics: " + toIndentedString(diagnostics) + "\n"
                + "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

