/*
 * Terra-Boot API
 * RESTful Services to interact with terraform CLI
 *
 * The version of the OpenAPI document: 1.0.22-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.eclipse.xpanse.modules.deployment.deployers.terraform.terraboot.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;
import java.util.UUID;

/** TerraformPlan */
@JsonPropertyOrder({
    TerraformPlan.JSON_PROPERTY_REQUEST_ID,
    TerraformPlan.JSON_PROPERTY_PLAN,
    TerraformPlan.JSON_PROPERTY_TERRAFORM_VERSION_USED,
    TerraformPlan.JSON_PROPERTY_ERROR_MESSAGE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.11.0")
public class TerraformPlan {
    public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
    @jakarta.annotation.Nonnull private UUID requestId;

    public static final String JSON_PROPERTY_PLAN = "plan";
    @jakarta.annotation.Nonnull private String plan;

    public static final String JSON_PROPERTY_TERRAFORM_VERSION_USED = "terraformVersionUsed";
    @jakarta.annotation.Nullable private String terraformVersionUsed;

    public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
    @jakarta.annotation.Nullable private String errorMessage;

    public TerraformPlan() {}

    public TerraformPlan requestId(@jakarta.annotation.Nonnull UUID requestId) {

        this.requestId = requestId;
        return this;
    }

    /**
     * The id of the Terraform plan request
     *
     * @return requestId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_REQUEST_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getRequestId() {
        return requestId;
    }

    @JsonProperty(JSON_PROPERTY_REQUEST_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRequestId(@jakarta.annotation.Nonnull UUID requestId) {
        this.requestId = requestId;
    }

    public TerraformPlan plan(@jakarta.annotation.Nonnull String plan) {

        this.plan = plan;
        return this;
    }

    /**
     * Terraform plan as a JSON string
     *
     * @return plan
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PLAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPlan() {
        return plan;
    }

    @JsonProperty(JSON_PROPERTY_PLAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPlan(@jakarta.annotation.Nonnull String plan) {
        this.plan = plan;
    }

    public TerraformPlan terraformVersionUsed(
            @jakarta.annotation.Nullable String terraformVersionUsed) {

        this.terraformVersionUsed = terraformVersionUsed;
        return this;
    }

    /**
     * The version of the Terraform binary used to execute scripts.
     *
     * @return terraformVersionUsed
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TERRAFORM_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTerraformVersionUsed() {
        return terraformVersionUsed;
    }

    @JsonProperty(JSON_PROPERTY_TERRAFORM_VERSION_USED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTerraformVersionUsed(@jakarta.annotation.Nullable String terraformVersionUsed) {
        this.terraformVersionUsed = terraformVersionUsed;
    }

    public TerraformPlan errorMessage(@jakarta.annotation.Nullable String errorMessage) {

        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * The error message of executing terraform plan command.
     *
     * @return errorMessage
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getErrorMessage() {
        return errorMessage;
    }

    @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErrorMessage(@jakarta.annotation.Nullable String errorMessage) {
        this.errorMessage = errorMessage;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TerraformPlan terraformPlan = (TerraformPlan) o;
        return Objects.equals(this.requestId, terraformPlan.requestId)
                && Objects.equals(this.plan, terraformPlan.plan)
                && Objects.equals(this.terraformVersionUsed, terraformPlan.terraformVersionUsed)
                && Objects.equals(this.errorMessage, terraformPlan.errorMessage);
    }

    @Override
    public int hashCode() {
        return Objects.hash(requestId, plan, terraformVersionUsed, errorMessage);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TerraformPlan {\n");
        sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
        sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
        sb.append("    terraformVersionUsed: ")
                .append(toIndentedString(terraformVersionUsed))
                .append("\n");
        sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
